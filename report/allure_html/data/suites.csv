"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","88","testcases.高危命令.sqlserver","test_002_database_sqlserver","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:30 CST 2023","84","testcases.高危命令.oracle","test_003_table_group_orcle","","","","test_001_table_group","
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","94","testcases.高危命令.mysql","test_004_table_mysql","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:31 CST 2023","90","testcases.高危命令.oraclleCDB","test_002_database_oracleCDB","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","81","testcases.高危命令.oraclleCDB","test_003_orcle_user_oracleCDB","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","83","testcases.高危命令.oraclleCDB","test_005_table_orcleCDB","","","","test_001_table_group","
    连接名称校验
    :return:
    数据源：oracleCDB
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","76","testcases.高危命令.pg","test_001_connection_pg","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","77","testcases.高危命令.oracle","test_003_table_group_orcle","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","91","testcases.高危命令.oracle","test_001_connection_oracle","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","80","testcases.高危命令.sqlserver","test_002_database_sqlserver","","","","test_001_database","
    连接名称校验
    :return:
    数据源：sqlserver
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","92","testcases.高危命令.oraclleCDB","test_002_database_oracleCDB","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","76","testcases.高危命令.pg","test_004_table_group_pg","","","","test_001_table_group","
    连接名称校验
    :return:
    数据源：pg
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","79","testcases.高危命令.oracle","test_004_table_orcle","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","76","testcases.高危命令.oracle","test_004_table_orcle","","","","test_001_table","
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","93","testcases.高危命令.mysql","test_002_orcle_user","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","77","testcases.高危命令.oraclleCDB","test_001_connection_oracleCDB","","","","test_001_connection","
    连接名称校验
    :return:
    数据源：oracleCDB
    用例一：
    1、数据源连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义数据源连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","72","testcases.高危命令.sqlserver","test_001_connection_sqlserver","","","","test_001_connection","
    连接名称校验
    :return:
    数据源：_sqlserver
    用例一：
    1、数据源连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义数据源连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","77","testcases.高危命令.sqlserver","test_005_table_sqlserver","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","94","testcases.高危命令.oracle","test_001_connection_oracle","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","73","testcases.高危命令.sqlserver","test_001_connection_sqlserver","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:33 CST 2023","84","testcases.高危命令.pg","test_004_table_group_pg","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","80","testcases.高危命令.pg","test_001_connection_pg","","","","test_001_connection","
    连接名称校验
    :return:
    数据源：pg
    用例一：
    1、数据源连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义数据源连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","81","testcases.高危命令.oracle","test_003_table_group_orcle","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:29 CST 2023","96","testcases.高危命令.mysql","test_004_table_mysql","","","","test_001_table","
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","96","testcases.高危命令.mysql","test_002_orcle_user","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","77","testcases.高危命令.sqlserver","test_004_table_group_sqlserver","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","92","testcases.高危命令.oracle","test_002_orcle_user","","","","test_001_oracle_user","
    :return:
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","71","testcases.高危命令.pg","test_005_table_pg","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","75","testcases.高危命令.oraclleCDB","test_005_table_orcleCDB","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","97","testcases.高危命令.mysql","test_003_table_group_mysql","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","87","testcases.高危命令.mysql","test_001_connection_mysql","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","83","testcases.高危命令.oraclleCDB","test_003_orcle_user_oracleCDB","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","77","testcases.高危命令.sqlserver","test_005_table_sqlserver","","","","test_001_table","
    连接名称校验
    :return:
    数据源：sqlserver
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","76","testcases.高危命令.pg","test_004_table_group_pg","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","84","testcases.高危命令.mysql","test_001_connection_mysql","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","80","testcases.高危命令.sqlserver","test_003_orcle_user_sqlserver","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","71","testcases.高危命令.pg","test_002_database_pg","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","76","testcases.高危命令.sqlserver","test_003_orcle_user_sqlserver","","","","test_001_oracle_user","
    连接名称校验
    :return:
    数据源：sqlserver
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","95","testcases.高危命令.oraclleCDB","test_003_orcle_user_oracleCDB","","","","test_001_oracle_user","
    连接名称校验
    :return:
    数据源：oracleCDB
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","78","testcases.高危命令.oraclleCDB","test_001_connection_oracleCDB","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:32 CST 2023","81","testcases.高危命令.oraclleCDB","test_005_table_orcleCDB","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","84","testcases.高危命令.oracle","test_002_orcle_user","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","80","testcases.高危命令.sqlserver","test_004_table_group_sqlserver","","","","test_001_table_group","
    连接名称校验
    :return:
    数据源：sqlserver
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","98","testcases.高危命令.mysql","test_003_table_group_mysql","","","","test_001_table_group","
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","67","testcases.高危命令.sqlserver","test_004_table_group_sqlserver","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:27 CST 2023","Fri Nov 17 14:01:27 CST 2023","83","testcases.高危命令.mysql","test_001_connection_mysql","","","","test_001_connection","
    连接名称校验
    :return:
    数据源：mysql
    用例一：
    1、数据源连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义数据源连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","88","testcases.高危命令.oraclleCDB","test_004_table_group_orcleCDB","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","76","testcases.高危命令.oracle","test_004_table_orcle","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","79","testcases.高危命令.pg","test_003_orcle_user_pg","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","83","testcases.高危命令.oraclleCDB","test_004_table_group_orcleCDB","","","","test_001_table_group","
    连接名称校验
    :return:
    数据源：oracleCDB
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","88","testcases.高危命令.oraclleCDB","test_001_connection_oracleCDB","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","99","testcases.高危命令.mysql","test_003_table_group_mysql","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","76","testcases.高危命令.pg","test_005_table_pg","","","","test_001_table_group","
    连接名称校验
    :return:
    数据源：pg
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","72","testcases.高危命令.pg","test_001_connection_pg","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","83","testcases.高危命令.oracle","test_001_connection_oracle","","","","test_001_connection","
    连接名称校验
    :return:
    数据源：oracle
    用例一：
    1、数据源连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义数据源连接-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义数据源连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","79","testcases.高危命令.pg","test_002_database_pg","","","","test_001_database","
    连接名称校验
    :return:
    数据源：pg
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","71","testcases.高危命令.pg","test_002_database_pg","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","78","testcases.高危命令.sqlserver","test_005_table_sqlserver","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:34 CST 2023","Fri Nov 17 14:01:34 CST 2023","75","testcases.高危命令.sqlserver","test_003_orcle_user_sqlserver","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:31 CST 2023","Fri Nov 17 14:01:31 CST 2023","81","testcases.高危命令.oraclleCDB","test_004_table_group_orcleCDB","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","78","testcases.高危命令.pg","test_003_orcle_user_pg","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","75","testcases.高危命令.sqlserver","test_002_database_sqlserver","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","91","testcases.高危命令.oracle","test_002_orcle_user","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:30 CST 2023","Fri Nov 17 14:01:30 CST 2023","99","testcases.高危命令.oraclleCDB","test_002_database_oracleCDB","","","","test_001_database","
    连接名称校验
    :return:
    数据源：oracleCDB
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:29 CST 2023","Fri Nov 17 14:01:29 CST 2023","91","testcases.高危命令.mysql","test_004_table_mysql","","","","test_002_username_apply_permission","
    # 普通用户高危提权成功
    此时此用户进行高危提权（insert,updata,delete,creat_table）成功，断言可以执行通过
    :return:
    "
"broken","Fri Nov 17 14:01:32 CST 2023","Fri Nov 17 14:01:32 CST 2023","74","testcases.高危命令.pg","test_003_orcle_user_pg","","","","test_001_oracle_user","
    连接名称校验
    :return:
    数据源：pg
    用例一：
    1、database连接下，不设置任何高危
    2、普通用户执行（insert,updata,delete,creat_table），不报高危提示。（前提：此用户有这么命令的权限）
    用例二：
    1、自定义database-高危（insert,updata,delete,creat_table），并关闭高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，但不报高危复核提示
    用例三：
    1、自定义database-高危（insert,updata,delete,creat_table），并开启高危复核方式
    2、普通用户执行（insert,updata,delete,creat_table），报高危提示，也提示高危复核提示
    3、此时此用户进行高危提权（insert,updata,delete,creat_table），断言可以执行通过

    用例：
    1、只自定义database连接-高危（insert）
    2、普通用户执行insert报高危提示，但是执行：updata,delete,creat_table）不会报高危提示
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","77","testcases.高危命令.pg","test_005_table_pg","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
"broken","Fri Nov 17 14:01:28 CST 2023","Fri Nov 17 14:01:28 CST 2023","88","testcases.高危命令.mysql","test_002_orcle_user","","","","test_001_oracle_user","
    :return:
    "
"broken","Fri Nov 17 14:01:33 CST 2023","Fri Nov 17 14:01:33 CST 2023","74","testcases.高危命令.sqlserver","test_001_connection_sqlserver","","","","test_003_only_apply_one_permission","
    # 用例：
    # 1、只自定义数据源连接 - 高危（insert）
    # 2、普通用户执行insert报高危提示，但是执行：updata, delete, creat_table）不会报高危提示
    # 清除环境，没有添加任何高危权限设置时，执行对应权限SQL语句，可以执行，不会有高危提示
    :return:
    "
